//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.PandaMove
{
    public class MSyncResponse : Message
    {
        public const string RosMessageName = "panda_move/Sync";

        public string[] object_name;
        public Geometry.MPoint[] position;
        public Geometry.MQuaternion[] orientation;
        public double[] joint_state;

        public MSyncResponse()
        {
            this.object_name = new string[0];
            this.position = new Geometry.MPoint[0];
            this.orientation = new Geometry.MQuaternion[0];
            this.joint_state = new double[0];
        }

        public MSyncResponse(string[] object_name, Geometry.MPoint[] position, Geometry.MQuaternion[] orientation, double[] joint_state)
        {
            this.object_name = object_name;
            this.position = position;
            this.orientation = orientation;
            this.joint_state = joint_state;
        }
        public override List<byte[]> SerializationStatements()
        {
            var listOfSerializations = new List<byte[]>();
            
            listOfSerializations.Add(BitConverter.GetBytes(object_name.Length));
            foreach(var entry in object_name)
                listOfSerializations.Add(SerializeString(entry));
            
            listOfSerializations.Add(BitConverter.GetBytes(position.Length));
            foreach(var entry in position)
                listOfSerializations.Add(entry.Serialize());
            
            listOfSerializations.Add(BitConverter.GetBytes(orientation.Length));
            foreach(var entry in orientation)
                listOfSerializations.Add(entry.Serialize());
            
            listOfSerializations.Add(BitConverter.GetBytes(joint_state.Length));
            foreach(var entry in joint_state)
                listOfSerializations.Add(BitConverter.GetBytes(entry));

            return listOfSerializations;
        }

        public override int Deserialize(byte[] data, int offset)
        {
            
            var object_nameArrayLength = DeserializeLength(data, offset);
            offset += 4;
            this.object_name= new string[object_nameArrayLength];
            for(var i = 0; i < object_nameArrayLength; i++)
            {
                var object_nameStringBytesLength = DeserializeLength(data, offset);
                offset += 4;
                this.object_name[i] = DeserializeString(data, offset, object_nameStringBytesLength);
                offset += object_nameStringBytesLength;
            }
            
            var positionArrayLength = DeserializeLength(data, offset);
            offset += 4;
            this.position= new Geometry.MPoint[positionArrayLength];
            for(var i = 0; i < positionArrayLength; i++)
            {
                this.position[i] = new Geometry.MPoint();
                offset = this.position[i].Deserialize(data, offset);
            }
            
            var orientationArrayLength = DeserializeLength(data, offset);
            offset += 4;
            this.orientation= new Geometry.MQuaternion[orientationArrayLength];
            for(var i = 0; i < orientationArrayLength; i++)
            {
                this.orientation[i] = new Geometry.MQuaternion();
                offset = this.orientation[i].Deserialize(data, offset);
            }
            
            var joint_stateArrayLength = DeserializeLength(data, offset);
            offset += 4;
            this.joint_state= new double[joint_stateArrayLength];
            for(var i = 0; i < joint_stateArrayLength; i++)
            {
                this.joint_state[i] = BitConverter.ToDouble(data, offset);
                offset += 8;
            }

            return offset;
        }

        public override string ToString()
        {
            return "MSyncResponse: " +
            "\nobject_name: " + System.String.Join(", ", object_name.ToList()) +
            "\nposition: " + System.String.Join(", ", position.ToList()) +
            "\norientation: " + System.String.Join(", ", orientation.ToList()) +
            "\njoint_state: " + System.String.Join(", ", joint_state.ToList());
        }
    }
}
